{"version":3,"sources":["Actions/RootAction.js","components/Header/Header.js","components/Menu/Menu.js","components/Helpers/Loading.js","components/Helpers/TagReplace.js","components/Sport/SportList.js","components/Sport/Sport.js","components/Law/LawList.js","components/Law/Law.js","components/Business/BusinessList.js","components/Business/Business.js","components/Health/HealthList.js","components/Health/Health.js","components/Search/Search.js","components/Home/HomeList.js","components/Home/Home.js","App.js","serviceWorker.js","Reducer/RootReducer.js","index.js"],"names":["loadItem","dispatch","axios","method","url","then","response","getItems","data","items","type","loadLogo","getLogo","feed","image","logo","Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","react_default","a","createElement","className","src","alt","Component","connect","state","actionCreators","Menu","_this","call","toggle","bind","assertThisInitialized","isOpen","setState","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","to","activeClassName","Loading","Spinner","style","width","height","TagReplace","htmlDecode","val","replace","dateFormate","moment","format","SportList","_this$props","sports","ListGroup","flush","sort","b","compareDate","pubDate","localeCompare","title","map","sport","i","ListGroupItem","tag","link","Card","data-aos","data-aos-duration","enclosure","CardImg","top","CardBody","CardTitle","CardText","description","author","Sport","_getPrototypeOf2","_len","length","args","Array","_key","concat","filterByCategorySet","Set","filter","categories","some","category","has","AOS","init","duration","isLoading","Helpers_Loading","Container","Row","Col","md","Sport_SportList","LawList","laws","law","Law","Law_LawList","BusinessList","businesses","business","Business","Business_BusinessList","HealthList","healths","health","Health","Health_HealthList","Search","search","e","defineProperty","target","name","itemsList","item","toLowerCase","indexOf","Input","placeholder","onChange","updateSearch","HomeList","Home","Home_HomeList","App","BrowserRouter","components_Header_Header","components_Menu_Menu","Switch","Route","exact","path","render","components_Home_Home","components_Sport_Sport","components_Law_Law","components_Business_Business","components_Health_Health","components_Search_Search","Boolean","window","location","hostname","match","initialState","store","createStore","undefined","action","objectSpread","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1af7a0cd.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Fetch Items Data\nexport const loadItem = () => dispatch => {\n    return axios({\n        method:'get',\n        url:'https://api.rss2json.com/v1/api.json?rss_url=http://www.abc.net.au/news/feed/51120/rss.xml',\n    })\n    .then(function (response) {\n        dispatch(getItems(response.data.items))\n    })\n}\n\nexport const getItems = (items) => ({\n  type: \"ITEMS\",\n  items: items,\n})\n\n// Fetch Logo Data\nexport const loadLogo = () => dispatch => {\n    return axios({\n        method:'get',\n        url:'https://api.rss2json.com/v1/api.json?rss_url=http://www.abc.net.au/news/feed/51120/rss.xml',\n    })\n    .then(function (response) {\n        dispatch(getLogo(response.data.feed.image))\n    });\n}\n\nexport const getLogo = (logo) => ({\n    type: \"LOGO\",\n    logo: logo,\n})","import React, { Component } from 'react';\n\n// CSS\nimport '../../styles/header.css';\n\n// Import Redux\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../Actions/RootAction';\n\nexport class Header extends Component {\n    // Redux Dispatch\n    componentDidMount() {\n        this.props.loadLogo()   \n    }\n\n    render() {\n        return (\n        <div className=\"header\">\n            <img src={this.props.logo} alt=\"Logo\" />\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return state\n  }\n  \nexport default connect (mapStateToProps, actionCreators) (Header)","import React, { Component } from 'react';\n\n// CSS\nimport '../../styles/menu.css'\n\n// Reacr Router Dom\n// Better than reactstrap NavLink as a single page application\nimport { NavLink } from 'react-router-dom';\n\n// Reactstrap Nav\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  } from 'reactstrap';\n\nexport class Menu extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.toggle = this.toggle.bind(this);\n        this.state = {\n          isOpen: false\n        };\n      }\n      toggle() {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n        <div className=\"menu\">\n            <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand href=\"/\">Home</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                    <NavItem>\n                        <NavLink to=\"/law\" activeClassName=\"activeLink\">Law</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink to=\"/business\" activeClassName=\"activeLink\">Business</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink to='/health' activeClassName=\"activeLink\">Health</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink to='/sport' activeClassName=\"activeLink\">Sport</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink to='/search' activeClassName=\"activeLink\">Search</NavLink>\n                    </NavItem>\n                </Nav>\n            </Collapse>\n            </Navbar>\n        </div>\n        )\n    }\n}\n\nexport default Menu\n","import React, { Component } from 'react';\nimport { Spinner } from 'reactstrap';\n\nexport class Loading extends Component {\n  render() {\n    return (\n        <div>\n            <h1>Loading  \n                <Spinner style={{ width: '0.8rem', height: '0.8rem' }} type=\"grow\" />\n                <Spinner style={{ width: '0.8rem', height: '0.8rem' }} type=\"grow\" />\n                <Spinner style={{ width: '0.8rem', height: '0.8rem' }} type=\"grow\" />\n            </h1> \n        </div>\n    )\n  }\n}\n\nexport default Loading\n","import moment from 'moment';\n\nconst TagReplace = {\n    htmlDecode: function(val) {\n        return val.replace(/<p>/g, \"\").replace(/<\\/p>/g,\"\");\n    },\n    dateFormate: function(val) {\n        return moment(val).format('L, LT');\n    }\n}\n\nexport default TagReplace;","import React, { Component } from 'react';\n\n// CSS\nimport  '../../styles/components.css';\n\nimport { \n    ListGroup, \n    ListGroupItem,\n    Card, \n    CardBody, \n    CardTitle, \n    CardText, \n    CardImg  } from 'reactstrap';\n\n// Helper\nimport TagReplace from '../Helpers/TagReplace';\n\nexport class SportList extends Component {\n  render() {\n    const {\n        sports,\n        className\n    } = this.props;\n    return (\n      <div>\n        <ListGroup flush>\n            {sports\n            // Sort based on Date in Alphabetical Order\n            .sort((a, b) => {\n                let compareDate = b.pubDate.localeCompare(a.pubDate);\n                return compareDate === 0 ? a.title.localeCompare(b.title) : compareDate\n            })\n            .map((sport, i) => (\n            <ListGroupItem tag=\"a\" href={sport.link} key={i}>\n                <Card data-aos=\"fade-up\" data-aos-duration=\"1000\">\n                    {sport.enclosure.link ?\n                        <CardImg top width=\"100%\" src={sport.enclosure.link} alt=\"Card image cap\" />\n                        :\n                        \"\"\n                    }\n                    <CardBody className={className}>\n                    <CardTitle>{sport.title}</CardTitle>\n                    <CardText className=\"description\">{TagReplace.htmlDecode(sport.description)}</CardText>\n                    <CardText>\n                        <small className=\"text-muted\">{TagReplace.dateFormate(sport.pubDate)}</small>\n                        <small className=\"text-muted\">Author: {sport.author}</small>\n                    </CardText>\n                    </CardBody>\n                </Card>\n            </ListGroupItem>\n            ))}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default SportList\n","import React, { Component } from 'react';\n\n// CSS\nimport  '../../styles/components.css';\n\n// AOS\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\n// Components\nimport Loading from '../Helpers/Loading';\nimport SportList from './SportList';\n\nimport { \n    Container, \n    Row, \n    Col } from 'reactstrap';\n\nexport class Sport extends Component {\n    state = {\n        sports: []\n    }\n\n    // Fetch API & get all items\n    componentDidMount() {\n        // Iterate & Filter all sport type\n        const filterByCategories = ['Sport'];\n        const filterByCategorySet = new Set(filterByCategories);\n        const sports = this.props.items.filter((sport) => \n            sport.categories.some((category) => filterByCategorySet.has(category))\n        );\n        this.setState({\n            sports: sports\n        })\n\n        AOS.init({\n            duration : 2000\n        })\n    }\n\n    render() {\n        const {\n            sports\n        } = this.state;\n        return (\n        <div>\n            {this.props.isLoading ? \n            <Loading/>\n            :\n            <Container>\n                {sports.length ? \n                <Row>\n                    <Col md='8'>\n                        <SportList \n                            sports = {sports}\n                            className = \"\"\n                        />\n                    </Col>\n                    <Col md='4'>\n                        <h4>FEATURES</h4>\n                        <SportList \n                            sports = {sports}\n                            className = \"featureCard\"\n                        />\n                    </Col>\n                </Row>\n                :\n                <h1>No News Yet</h1>                \n                }\n            </Container>\n        }\n        </div>\n        )\n    }\n}\n\nexport default Sport\n","import React, { Component } from 'react';\n\n\n// CSS\nimport  '../../styles/components.css';\n\nimport { \n    ListGroup, \n    ListGroupItem,\n    Card, \n    CardBody, \n    CardTitle, \n    CardText, \n    CardImg  } from 'reactstrap';\n\n// Helper\nimport TagReplace from '../Helpers/TagReplace';\n\nexport class LawList extends Component {\n  render() {\n    const {\n        laws,\n        className\n    } = this.props;\n    return (\n      <div>\n        <ListGroup flush>\n            {laws\n            // Sort based on Date in Alphabetical Order\n            .sort((a, b) => {\n                let compareDate = b.pubDate.localeCompare(a.pubDate);\n                return compareDate === 0 ? a.title.localeCompare(b.title) : compareDate\n            })\n            .map((law, i) => (\n            <ListGroupItem tag=\"a\" href={law.link} key={i}>\n                <Card data-aos=\"fade-up\" data-aos-duration=\"1000\">\n                    {law.enclosure.link ?\n                        <CardImg top width=\"100%\" src={law.enclosure.link} alt=\"Card image cap\" />\n                        :\n                        \"\"\n                    }\n                    <CardBody className={className}>\n                    <CardTitle>{law.title}</CardTitle>\n                    <CardText className=\"description\">{TagReplace.htmlDecode(law.description)}</CardText>\n                    <CardText>\n                        <small className=\"text-muted\">{TagReplace.dateFormate(law.pubDate)}</small>\n                        <small className=\"text-muted\">Author: {law.author}</small>\n                    </CardText>\n                    </CardBody>\n                </Card>\n            </ListGroupItem>\n            ))}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default LawList\n","import React, { Component } from 'react';\n\n// CSS\nimport  '../../styles/components.css';\n\n// AOS\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\n// Components\nimport Loading from '../Helpers/Loading';\nimport LawList from './LawList';\n\nimport { \n    Container, \n    Row, \n    Col } from 'reactstrap';\n\nexport class Law extends Component {\n    state = {\n        laws: [],\n    }\n\n    componentDidMount() {\n        // Iterate & Filter all laws type\n        const filterByCategories = ['Law, Crime and Justice', 'Courts and Trials', 'Local Governmen', 'Murder and Manslaughter', 'Crime', 'Prisons and Punishment'];\n        const filterByCategorySet = new Set(filterByCategories);\n        const laws = this.props.items.filter((law) => \n            law.categories.some((category) => filterByCategorySet.has(category))\n        );\n        this.setState({\n            laws: laws\n        })\n\n        AOS.init({\n            duration : 2000\n        })\n    }\n\n    render() {\n        const {\n            laws\n        } = this.state;\n        return (\n        <div>\n            {this.props.isLoading ? \n            <Loading />\n            :\n            <Container>\n                {laws.length ?\n                <Row>\n                    <Col md='8'>\n                        <LawList \n                            laws = {laws}\n                            className = \"\"\n                        />\n                    </Col>\n                    <Col md='4'>\n                        <h4>FEATURES</h4>\n                        <LawList \n                            laws = {laws}\n                            className = \"featureCard\"\n                        />\n                    </Col>\n                </Row>\n                :\n                <h1>No News Yet</h1>                \n                }\n            </Container>\n        }\n        </div>\n        )\n    }\n}\n\nexport default Law\n","import React, { Component } from 'react';\n\n// CSS\nimport  '../../styles/components.css';\n\nimport { \n    ListGroup, \n    ListGroupItem,\n    Card, \n    CardBody, \n    CardTitle, \n    CardText, \n    CardImg  } from 'reactstrap';\n\n// Helper\nimport TagReplace from '../Helpers/TagReplace';\n\nexport class BusinessList extends Component {\n  render() {\n    const {\n        businesses,\n        className\n    } = this.props;\n    return (\n      <div>\n        <ListGroup flush>\n            {businesses\n            // Sort based on Date in Alphabetical Order\n            .sort((a, b) => {\n                let compareDate = b.pubDate.localeCompare(a.pubDate);\n                return compareDate === 0 ? a.title.localeCompare(b.title) : compareDate\n            })\n            .map((business, i) => (\n            <ListGroupItem tag=\"a\" href={business.link} key={i}>\n                <Card data-aos=\"fade-up\" data-aos-duration=\"1000\">\n                    {business.enclosure.link ?\n                        <CardImg top width=\"100%\" src={business.enclosure.link} alt=\"Card image cap\" />\n                        :\n                        \"\"\n                    }\n                    <CardBody className={className}>\n                    <CardTitle>{business.title}</CardTitle>\n                    <CardText className=\"description\">{TagReplace.htmlDecode(business.description)}</CardText>\n                    <CardText>\n                        <small className=\"text-muted\">{TagReplace.dateFormate(business.pubDate)}</small>\n                        <small className=\"text-muted\">Author: {business.author}</small>\n                    </CardText>\n                    </CardBody>\n                </Card>\n            </ListGroupItem>\n            ))}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default BusinessList\n","import React, { Component } from 'react';\n\n// CSS\nimport  '../../styles/components.css';\n\n// AOS\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\n// Components\nimport Loading from '../Helpers/Loading';\nimport BusinessList from './BusinessList';\n\nimport { \n    Container, \n    Row, \n    Col } from 'reactstrap';\n\nexport class Business extends Component {\n    state = {\n        businesses: []\n    }\n\n    // Fetch API & get all items\n    componentDidMount() {\n        // Iterate & Filter all business type\n        const filterByCategories = ['Business, Economics and Finance'];\n        const filterByCategorySet = new Set(filterByCategories);\n        const businesses = this.props.items.filter((business) => \n        business.categories.some((category) => filterByCategorySet.has(category))\n        );\n        this.setState({\n            businesses: businesses\n        })\n\n        AOS.init({\n            duration : 2000\n        })\n    }\n\n    render() {\n        const {\n            businesses\n        } = this.state;\n        return (\n        <div>\n            {this.props.isLoading ? \n            <Loading/>\n            :\n            <Container>\n                {businesses.length ?\n                <Row>\n                    <Col md='8'>\n                        <BusinessList \n                            businesses = {businesses}\n                            className = \"featureCard\"\n                        />\n                    </Col>\n                    <Col md='4'>\n                        <h4>FEATURES</h4>\n                        <BusinessList \n                            businesses = {businesses}\n                            className = \"featureCard\"\n                        />\n                    </Col>\n                </Row>\n                :\n                <h1>No News Yet</h1>                \n                }\n            </Container>\n        }\n        </div>\n        )\n    }\n}\n\nexport default Business\n","import React, { Component } from 'react';\n\n\n// CSS\nimport  '../../styles/components.css';\n\nimport { \n    ListGroup, \n    ListGroupItem,\n    Card, \n    CardBody, \n    CardTitle, \n    CardText, \n    CardImg  } from 'reactstrap';\n\n// Helper\nimport TagReplace from '../Helpers/TagReplace';\n\nexport class HealthList extends Component {\n  render() {\n    const {\n        healths,\n        className\n    } = this.props;\n    return (\n      <div>\n        <ListGroup flush>\n                {healths\n                // Sort based on Date in Alphabetical Order\n                .sort((a, b) => {\n                    let compareDate = b.pubDate.localeCompare(a.pubDate);\n                    return compareDate === 0 ? a.title.localeCompare(b.title) : compareDate\n                })\n                .map((health, i) => (\n                <ListGroupItem tag=\"a\" href={health.link} key={i}>\n                    <Card data-aos=\"fade-up\" data-aos-duration=\"1000\">\n                        {health.enclosure.link ?\n                            <CardImg top width=\"100%\" src={health.enclosure.link} alt=\"Card image cap\" />\n                            :\n                            \"\"\n                        }\n                        <CardBody className={className}>\n                        <CardTitle>{health.title}</CardTitle>\n                        <CardText className=\"description\">{TagReplace.htmlDecode(health.description)}</CardText>\n                        <CardText>\n                            <small className=\"text-muted\">{TagReplace.dateFormate(health.pubDate)}</small>\n                            <small className=\"text-muted\">Author: {health.author}</small>\n                        </CardText>\n                        </CardBody>\n                    </Card>\n                </ListGroupItem>\n                ))}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default HealthList\n","import React, { Component } from 'react';\n\n// CSS\nimport  '../../styles/components.css';\n\n/// AOS\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\n// Components\nimport Loading from '../Helpers/Loading';\nimport HealthList from './HealthList';\n\nimport { \n    Container, \n    Row, \n    Col } from 'reactstrap';\n\nexport class Health extends Component {\n    state = {\n        healths: [],\n    }\n\n    // Fetch API & get all items\n    componentDidMount() {\n        // Iterate & Filter all health type\n        const filterByCategories = ['Health', 'Healthcare Facilities', 'Death', 'Community and Societ'];\n        const filterByCategorySet = new Set(filterByCategories);\n        const healths = this.props.items.filter((health) => \n            health.categories.some((category) => filterByCategorySet.has(category))\n        );\n        this.setState({\n            healths: healths\n        })\n\n        AOS.init({\n            duration : 2000\n        })\n    }\n\n    render() {\n        const {\n            healths\n        } = this.state;\n        return (\n        <div>\n            {this.props.isLoading ? \n            <Loading />\n            :\n            <Container>\n                {healths.length ?\n                <Row>\n                    <Col md='8'>\n                        <HealthList \n                            healths = {healths}\n                            className = \"\"\n                        />\n                    </Col>\n                    <Col md='4'>\n                        <h4>FEATURES</h4>\n                        <HealthList \n                            healths = {healths}\n                            className = \"featureCard\"\n                        />\n                    </Col>\n                </Row>\n                :\n                <h1>No News Yet</h1>                \n                }\n            </Container>\n        }\n        </div>\n        )\n    }\n}\n\nexport default Health\n","import React, { Component } from 'react';\n\n// CSS\nimport '../../styles/search.css';\n\n// Helpers\nimport Loading from '../Helpers/Loading';\nimport TagReplace from '../Helpers/TagReplace';\n\nimport { \n    Container, \n    ListGroup, \n    ListGroupItem,\n    Card, \n    CardBody, \n    CardTitle, \n    CardText, \n    Input  } from 'reactstrap';\n\nexport class Search extends Component {\n    state = {\n        search: \"\",\n    }\n\n    // Get Input Value\n    updateSearch(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n        const {\n            search\n        } = this.state;\n\n        const {\n            isLoading,\n            items\n        } = this.props;\n\n        // Filter items for Search\n        // Search Based on News Title OR Description OR Author OR Date\n        let itemsList = items.filter(\n            (item) => {\n                return item.title.toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n                       item.description.toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n                       item.author.toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n                       TagReplace.dateFormate(item.pubDate).toLowerCase().indexOf(search.toLowerCase()) !== -1 \n            }\n        )\n\n        return (\n        <div className=\"search\">\n            <Container>\n                <Input \n                    type=\"text\"\n                    name=\"search\"\n                    placeholder=\"Search for News\"\n                    value={search}\n                    onChange={this.updateSearch.bind(this)}\n                />\n                {isLoading ? \n                <Loading />\n                :\n                <ListGroup flush>\n                    {itemsList\n                        // Sort based on Date in Alphabetical Order\n                        .sort((a, b) => {\n                            let compareDate = b.pubDate.localeCompare(a.pubDate);\n                            return compareDate === 0 ? a.title.localeCompare(b.title) : compareDate\n                        })\n                        .map((item, i) => (\n                    <ListGroupItem key={i}>\n                        <Card>\n                            <CardBody>\n                                <CardTitle>{item.title}</CardTitle>\n                                <CardText className=\"description\">{TagReplace.htmlDecode(item.description)}</CardText>\n                                <CardText>\n                                    <small className=\"text-muted\">{TagReplace.dateFormate(item.pubDate)}</small>\n                                    <small className=\"text-muted\">Author: {item.author}</small>\n                                </CardText>\n                            </CardBody>\n                        </Card>\n                    </ListGroupItem>\n                    ))}\n                </ListGroup>\n                }\n            </Container>\n        </div>\n        )\n    }\n}\n\nexport default Search\n","import React, { Component } from 'react';\n\n// CSS\nimport  '../../styles/components.css';\n\nimport { \n    ListGroup, \n    ListGroupItem,\n    Card, \n    CardBody, \n    CardTitle, \n    CardText, \n    CardImg  } from 'reactstrap';\n\n// Helper\nimport TagReplace from '../Helpers/TagReplace';\n\nexport class HomeList extends Component {\n  render() {\n    const {\n        items,\n        className\n    } = this.props;\n    return (\n    <ListGroup flush>\n        {items\n        // Sort based on Date in Alphabetical Order\n        .sort((a, b) => {\n            let compareDate = b.pubDate.localeCompare(a.pubDate);\n            return compareDate === 0 ? a.title.localeCompare(b.title) : compareDate\n        })\n        .map((item, i) => (\n        <ListGroupItem tag=\"a\" href={item.link} key={i}>\n            <Card data-aos=\"fade-up\" data-aos-duration=\"1000\">\n                {item.enclosure.link ?\n                    <CardImg top width=\"100%\" src={item.enclosure.link} alt=\"Card image cap\" />\n                    :\n                    \"\"\n                }\n                <CardBody className={className}>\n                    <CardTitle>{item.title}</CardTitle>\n                    <CardText className=\"description\">{TagReplace.htmlDecode(item.description)}</CardText>\n                    <CardText>\n                        <small className=\"text-muted\">{TagReplace.dateFormate(item.pubDate)}</small>\n                        <small className=\"text-muted\">Author: {item.author}</small>\n                    </CardText>\n                </CardBody>\n            </Card>\n        </ListGroupItem>\n        ))}\n    </ListGroup>\n    )\n  }\n}\n\nexport default HomeList\n","import React, { Component } from 'react';\n\n// CSS\nimport  '../../styles/components.css';\n\n// AOS Scroll Library\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nimport { \n    Container, \n    Row, \n    Col } from 'reactstrap';\n\n// Components\nimport Loading from '../Helpers/Loading';\nimport HomeList from './HomeList'\n\nexport class Home extends Component {\n    componentDidMount() {\n        AOS.init({\n            duration : 2000\n        })\n    }\n    render() {\n        const {\n            isLoading,\n            items\n        } = this.props;\n        return (\n        <div>\n            {isLoading ? \n            <Loading/>\n            :\n            <Container>\n                {items.length ?\n                <Row>\n                    <Col md='8'>\n                        <HomeList\n                            items = {items}\n                            className = \"\"\n                        />\n                    </Col>\n                    <Col md='4'>\n                        <h4>FEATURES</h4>\n                        <HomeList\n                            items = {items}\n                            className = \"featureCard\"\n                        />\n                    </Col>\n                </Row>\n                :\n                <h1>No News Yet</h1>                \n                }\n            </Container>\n        }\n        </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react';\n\n// React Router\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Header\nimport Header from './components/Header/Header'\n\n// Menu\nimport Menu from './components/Menu/Menu';\n\n// Components\nimport Loading from './components/Helpers/Loading';\nimport Sport from './components/Sport/Sport';\nimport Law from './components/Law/Law';\nimport Business from'./components/Business/Business';\nimport Health from './components/Health/Health';\nimport Search from './components/Search/Search';\nimport Home from './components/Home/Home';\n\n// Import Redux\nimport { connect } from 'react-redux';\nimport * as actionCreators from './Actions/RootAction';\n\nclass App extends Component {\n  // Redux Dispatch\n  componentDidMount() {\n    this.props.loadItem()   \n  }\n\n  render() {\n    // Redux initialState\n    const {\n      isLoading,\n      items\n    } = this.props;\n    \n    return (\n      <div className=\"App\">\n      {isLoading ? \n        <Loading/>\n      :\n        <Router>\n          <div>\n            <Header />\n            <Menu />\n            <Switch>\n              <Route exact path=\"/\" render = { () =>  < Home items = {items} isLoading={isLoading}/> }/>\n              <Route path=\"/sport\" render = { () =>  < Sport items = {items} isLoading={isLoading}/> } />\n              <Route  path=\"/law\" render = { () =>  < Law items = {items} isLoading={isLoading}/> } />\n              <Route  path=\"/business\" render = { () =>  < Business items = {items} isLoading={isLoading}/> } />\n              <Route  path=\"/health\" render = { () =>  < Health items = {items} isLoading={isLoading}/> } />\n              <Route  path=\"/search\" render = { () =>  < Search items = {items} isLoading={isLoading}/> } />\n            </Switch>\n          </div>\n        </Router>\n      \n      }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return state\n}\n\nexport default connect (mapStateToProps, actionCreators) (App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    items: [],\n    isLoading: true,\n    logo: ''\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"ITEMS\":\n        return { \n            ...state, \n            items: action.items,\n            isLoading: false\n        }\n    \n    case \"LOGO\":\n        return { \n            ...state, \n            logo: action.logo,\n        }\n\n    default:\n        return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Redux / React-Redux\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\n// Redux-thunk\nimport thunk from 'redux-thunk';\n\n// Reducer\nimport reducers from './Reducer/RootReducer';\n\n// Redux Store\nlet store = createStore (reducers, applyMiddleware(thunk))\n\nReactDOM.render(\n    // Redux: Store provider\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}